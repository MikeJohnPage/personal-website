<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Mike John Page</title>
    <link>/blog/</link>
    <description>Recent content in Blog on Mike John Page</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 22 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Bash Aliases</title>
      <link>/blog/bash-alias/</link>
      <pubDate>Tue, 22 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/bash-alias/</guid>
      <description>In this quick post, I will show you how to make a bash alias. To understand what an alias does, Wikipedia provides a good definition:
 In computing, aliasing describes a situation in which a data location in memory can be accessed through different symbolic names in the program.
 In short, creating an alias in bash (the unix shell command language) allows you to type some specific keyword to run whatever you choose to alias (e.</description>
    </item>
    
    <item>
      <title>Rendering JavaScript content using Python, Selenium, and a Headless Browser</title>
      <link>/blog/rendering-javascript-content-using-python-selenium-and-a-headless-browser/</link>
      <pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>/blog/rendering-javascript-content-using-python-selenium-and-a-headless-browser/</guid>
      <description>This post will demonstrate how to scrape data from the web rendered in JavaScript (JS), using Python and several other tools. To achieve this, we will build a scraper that collects the current days weather forecast for a given location (rendered in JS) from Wunderground.
First, the robots.txt file on the Wunderground site must be inspected, in addition to the Terms of Service of the site, to see if scraping information is permitted:</description>
    </item>
    
    <item>
      <title>Ubuntu 18.04 LTS &#43; Thinkpad X1 Carbon 6th Generation</title>
      <link>/blog/ubuntu-18-04-lts-thinkpad-x1-carbon-6th-generation/</link>
      <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/ubuntu-18-04-lts-thinkpad-x1-carbon-6th-generation/</guid>
      <description>In this blog post, I will be listing some of the steps I took to set up Ubuntu 18.04 LTS on a Lenovo ThinkPad X1 Carbon 6th Gen. This includes installation steps, as well as post-installations packages I have found that I now use in my daily workflow. This serves to both remind myself of how to set up Ubuntu on future machines in a way I now deem to be near-optimal, and to also help others who may be having difficulty getting Ubuntu to run the way they would like.</description>
    </item>
    
    <item>
      <title>GGDOT Hacknight: using Box-Cox Transformations and Regression to Analyse the CO2 Emissions of Food</title>
      <link>/blog/ggdot-hacknight-using-box-cox-transformations-and-regression-to-analyse-the-co2-emissions-of-food/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/ggdot-hacknight-using-box-cox-transformations-and-regression-to-analyse-the-co2-emissions-of-food/</guid>
      <description>GGDOT HACKNIGHT The GGDOT project combines expertise in greenhouse gas emission calculations, nutrition, and data science to deliver a toolkit. This toolkit contains information on the greenhouse gas emissions and nutritional content of the food we eat. As part of the project, GGDOT host Hacknights to help develop their tools and analyse the data within them. I was fortunate enough to be able to attend the recent Manchester Hacknight, and this blog post will go through the analyses I performed from that session (and the day after).</description>
    </item>
    
    <item>
      <title>Phyllotaxis Project</title>
      <link>/blog/phyllotaxis-project/</link>
      <pubDate>Thu, 06 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/phyllotaxis-project/</guid>
      <description>Michael Page 
INFO This post isn’t so much a ‘blog’ post as it is a repository for me to store my code for the ‘Phyllotaxis: Draw flowers using mathematics’ project which can be found on DataCamp. Most of the code follows the standard solutions for the project, with the exception of using theme_void() to remove elements from a plot. In this case, using theme_void() is a more elegant solution (in my opinion) than independetly assigning element_blank() to each element (e.</description>
    </item>
    
    <item>
      <title>Multilevel Modelling in SPSS</title>
      <link>/blog/multilevel-modelling-in-spss/</link>
      <pubDate>Wed, 08 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/multilevel-modelling-in-spss/</guid>
      <description>Michael Page 
INTRODUCTION Nested data structures When selecting an analysis for a given data set it is important to consider if the data is in a nested (i.e., hierarchical/clustered/grouped) structure. A nested data structure is one in which the data is organised at more than one level. For example, students can be nested within classes as so:
 In a similar fashion, it could be said that individual student test scores can be nested within students, who are nested within classes, which are nested within schools:</description>
    </item>
    
  </channel>
</rss>